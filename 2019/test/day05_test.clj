(ns day05-test
  (:require [day05 :as sut]
            [clojure.test :as t]))

(sut/opcode 1002) ; => 2
(sut/opcode 99) ; => 99
(sut/opcode 3) ; => 3
(sut/parameters [1002 4 3 4 33] 0 2) ; => [33 3]
(sut/parameter-modes 1002)

#_
(sut/part1 "3,0,4,0,99" [5]) ; outputs whatever it gets as inputs

#_
(sut/part1 "1002,4,3,4,33" [])


#_
(sut/try-20 "3,9,8,9,10,9,4,9,99,-1,8")
;; => ([0] [0] [0] [0] [0] [0] [0] [0] [1] [0] [0] [0] [0] [0] [0] [0] [0] [0] [0] [0])

#_
(sut/try-20 "3,9,7,9,10,9,4,9,99,-1,8")
;; => ([1] [1] [1] [1] [1] [1] [1] [1] [0] [0] [0] [0] [0] [0] [0] [0] [0] [0] [0] [0])

#_
(sut/try-20 "3,3,1108,-1,8,3,4,3,99")
;; => ([0] [0] [0] [0] [0] [0] [0] [0] [1] [0] [0] [0] [0] [0] [0] [0] [0] [0] [0] [0])

#_
(sut/try-20 "3,3,1107,-1,8,3,4,3,99")
;; => ([1] [1] [1] [1] [1] [1] [1] [1] [0] [0] [0] [0] [0] [0] [0] [0] [0] [0] [0] [0])

#_
(sut/try-20 "3,12,6,12,15,1,13,14,13,4,13,99,-1,0,1,9")
;; => ([0] [1] [1] [1] [1] [1] [1] [1] [1] [1] [1] [1] [1] [1] [1] [1] [1] [1] [1] [1])

#_
(sut/try-20 "3,3,1105,-1,9,1101,0,0,12,4,12,99,1")
;; => ([0] [1] [1] [1] [1] [1] [1] [1] [1] [1] [1] [1] [1] [1] [1] [1] [1] [1] [1] [1])

#_
(sut/try-20 "3,21,1008,21,8,20,1005,20,22,107,8,21,20,1006,20,31,1106,0,36,98,0,0,1002,21,125,20,4,20,1105,1,46,104,999,1105,1,46,1101,1000,1,20,4,20,1105,1,46,98,99")
;; => ([999] [999] [999] [999] [999] [999] [999] [999] [1000] [1001] [1001] [1001] [1001] [1001] [1001] [1001] [1001] [1001] [1001] [1001])
